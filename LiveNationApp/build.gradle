import java.util.regex.Pattern

buildscript {
    repositories {
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

def computeVersionCode() {
    return 28
}

def computeVersionName(def versionCode) {
    return "2.0." + versionCode
}

def computeGitSha(File rootDir) {
    ProcessBuilder processBuilder = new ProcessBuilder("git", "rev-parse", "--short", "HEAD")
    processBuilder.directory(rootDir)
    return processBuilder.start().in.text.trim()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        versionCode computeVersionCode()
        versionName computeVersionName(versionCode)
        minSdkVersion 14
        targetSdkVersion 19

        for (Project project : rootProject.subprojects) {
            String name = project.name.toUpperCase().replaceAll("[^A-Z_]", "")
            String gitSha = computeGitSha(project.projectDir)
            buildConfigField "String", "GIT_SHA_$name", "\"$gitSha\""
        }
    }

    signingConfigs {

        def mLNStorePassword
        def mLNKeyAlias
        def mLNKeyPassword

        if (!project.hasProperty('LNStorePassword')) {
            mLNStorePassword = "default"
        } else {
            mLNStorePassword = LNStorePassword
        }

        if (!project.hasProperty('LNKeyAlias')) {
            mLNKeyAlias = "default"
        } else {
            mLNKeyAlias = LNKeyAlias
        }
        if (!project.hasProperty('LNKeyPassword')) {
            mLNKeyPassword = "default"
        } else {
            mLNKeyPassword = LNKeyPassword
        }


        debug {
            storeFile file('../docs/keystore/debug.keystore')
        }

        release {
            storeFile file(LNReleaseStoreFile)
            storePassword mLNStorePassword
            keyAlias mLNKeyAlias
            keyPassword mLNKeyPassword
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    sourceSets {
        androidTest.setRoot('src/test')
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

        debug {
            packageNameSuffix ".debug"
            versionNameSuffix " debug"
            signingConfig signingConfigs.debug
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    compile project(':LabsPlatform')
    compile project(':facebookSDK')
    compile project(':Ticketing')
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.google.android.gms:play-services:4.3.23'
    compile('se.emilsjolander:stickylistheaders:2.1.5').ext.git = 'https://github.com/emilsjolander/StickyListHeaders.git'
    compile 'com.crashlytics.android:crashlytics:1.+'

}
